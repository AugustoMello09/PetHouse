services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      retries: 5
      timeout: 10s
      start_period: 20s  

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
  
  zipkin-service:
    image: openzipkin/zipkin:latest
    container_name: zipkin-service
    ports:
      - 9411:9411 
    healthcheck:
      test: ["CMD", "wget", "--spider", "-S", "http://zipkin-service:9411/"]
      interval: 5s
      retries: 5
      timeout: 10s
      start_period: 0s
    depends_on:
      kafka:
        condition: service_healthy       
    networks:
      - broker-kafka
  
  eureka-service:
    build:
      dockerfile: ./eureka/Dockerfile
      context: .
    image: augustomello09/pethouse-backend-eureka:latest
    container_name: eureka-service
    ports:
      - 8761:8761
    networks:
      - broker-kafka
  
  gateway-service:
    build:
      dockerfile: ./gateway/Dockerfile
      context: .
    image: augustomello09/pethouse-backend-gateway:latest
    container_name: gateway-service
    environment:
      - eureka.client.fetch-registry = true
      - eureka.client.register-with-eureka = true
      - eureka.client.serviceUrl.defaultZone = http://eureka-service:8761/eureka
      - spring.zipkin.base-url = http://zipkin-service:9411/api/v2/spans
    ports:
      - 8080:8080
    networks:
      - broker-kafka
    depends_on:
      eureka-service:
        condition: service_started
      zipkin-service:
        condition: service_healthy  
  
  auth-service:
    build:
      dockerfile: ./auth/Dockerfile
      context: .
    image: augustomello09/pethouse-backend-auth:latest
    container_name: auth-service
    environment:
      - eureka.client.service-url.defaultZone = http://eureka-service:8761/eureka
      - spring.zipkin.base-url = http://zipkin-service:9411/api/v2/spans
    networks:
      - broker-kafka
    depends_on:
      eureka-service:
        condition: service_started 
      zipkin-service:
        condition: service_healthy
  
  pethouse-service:
    build:
      dockerfile: ./PetHouse/Dockerfile
      context: .
    image: augustomello09/pethouse-backend-pethouse:latest
    container_name: pethouse-service
    environment:
      - spring.kafka.bootstrap-servers=kafka:29092
      - eureka.client.service-url.defaultZone=http://eureka-service:8761/eureka
      - spring.zipkin.base-url=http://zipkin-service:9411/api/v2/spans
    networks:
      - broker-kafka
    depends_on:
      kafka:
        condition: service_healthy
      eureka-service:
        condition: service_started
      zipkin-service:
        condition: service_healthy      

networks:
  broker-kafka:
    driver: bridge